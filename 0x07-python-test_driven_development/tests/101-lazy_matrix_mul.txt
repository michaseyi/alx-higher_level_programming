===========================
How to Use 100-lazy_matrix_mul.py
============================

This module defines a function ``lazy_matrix_mul()`` that takes in two
2-d lists and returns the mathematical multiplication of both lists


::

   >>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul
   >>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
   array([[ 7, 10],
          [15, 22]])

::

   >>> lazy_matrix_mul([[1, 2]], [[3, 4], [5, 6]])
   array([[13, 16]])

::

   >>> lazy_matrix_mul("not a list",[[1, 2]])
   Traceback (most recent call last):
   ValueError: Scalar operands are not allowed, use '*' instead

::

   >>> lazy_matrix_mul([[1, 2]], "not a list")
   Traceback (most recent call last):
   ValueError: Scalar operands are not allowed, use '*' instead

::

   >>> lazy_matrix_mul(["not a list"],[[1, 2]])
   Traceback (most recent call last):
   TypeError: invalid data type for einsum


::

   >>> lazy_matrix_mul([[1, 2]], ["not a list"])
   Traceback (most recent call last):
   ValueError: shapes (1,2) and (1,) not aligned: 2 (dim 1) != 1 (dim 0)

::

   >>> lazy_matrix_mul([], [])
   0.0


   >>> lazy_matrix_mul([[1, 2]], [])
   Traceback (most recent call last):
   ValueError: shapes (1,2) and (0,) not aligned: 2 (dim 1) != 0 (dim 0)

::

   >>> lazy_matrix_mul([['a', 2], [3, 4]], [[1, 2], [3, 4]])
   Traceback (most recent call last):
   TypeError: invalid data type for einsum

::

   >>> lazy_matrix_mul([[1, 2], [3, 4]], [['b', 2], [3, 4]])
   Traceback (most recent call last):
   TypeError: invalid data type for einsum

::

   >>> lazy_matrix_mul([[1, 2, 3], [3, 4]], [[1, 2], [3, 4]])
   Traceback (most recent call last):
   ValueError: setting an array element with a sequence.

::

   >>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2, 3], [3, 4]]) #doctest: +NORMALIZE_WHITESPACE
   Traceback (most recent call last):
   ValueError: setting an array element with a sequence.

::

   >>> lazy_matrix_mul([[3,4], [5,6]], [[1, 2]])
   Traceback (most recent call last):
   ValueError: shapes (2,2) and (1,2) not aligned: 2 (dim 1) != 1 (dim 0)